{"ast":null,"code":"var _jsxFileName = \"/var/www/html/host/stock-viewer/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport firebase from '../Firebase';\nimport '../components/login.css';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport { Link } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport history from '../History';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.onCollectionUpdate = querySnapshot => {\n      const user = [];\n      querySnapshot.forEach(doc => {\n        const _doc$data = doc.data(),\n              email = _doc$data.email,\n              password = _doc$data.password;\n\n        user.push({\n          key: doc.id,\n          doc,\n          email,\n          password\n        });\n      });\n      this.setState({\n        user\n      });\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.signInWithEmailAndPassword = event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      console.log(email);\n      console.log(password);\n      firebase.auth().signInWithEmailAndPassword(email, password).then(() => {\n        this.setState({\n          loginUser: email\n        });\n        localStorage.setItem('email1', email);\n        console.log(\"login sucessfully\");\n        history.push('/Company-list'); // window.location.hash = '/Company-list'\n      }).catch(error => {\n        console.log('hey error: ', error);\n\n        if (error.code === \"auth/user-not-found\") {\n          swal(\"Email not found\", \"Please, Signup\", \"error\");\n        } else if (error.code === \" auth/wrong-password\") {\n          swal(\"Please Enter correct password\", \"\", \"error\");\n        } else {\n          swal(\"Internal Server Error\");\n        }\n      });\n    };\n\n    this.ref = firebase.firestore().collection('users');\n    this.state = {\n      email: '',\n      password: '',\n      user: [],\n      array: [],\n      hidden: true,\n      loginUser: ''\n    };\n    this.toggleShow = this.toggleShow.bind(this);\n  }\n\n  componentDidMount() {\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n  }\n  /**hide or show password field value */\n\n\n  toggleShow() {\n    this.setState({\n      hidden: !this.state.hidden\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"backgroung_class\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main_class\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Stock Login\"), React.createElement(Grid, {\n      container: true,\n      spacing: 1,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"outlined-email-input\",\n      label: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      autoComplete: \"email\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      value: email,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"outlined-password-input\",\n      label: \"Password\",\n      type: this.state.hidden ? \"password\" : \"text\",\n      name: \"password\",\n      autoComplete: \"current-password\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      value: password,\n      onChange: this.handleInputChange,\n      InputProps: {\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"Toggle password visibility\",\n          onClick: this.toggleShow,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, password ? React.createElement(VisibilityOff, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }) : React.createElement(Visibility, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        })))\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      disabled: !this.state.email || !this.state.password,\n      variant: \"contained\",\n      size: \"large\",\n      onClick: event => this.signInWithEmailAndPassword(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Login\")), React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"New User? \", React.createElement(Button, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Sign Up\"))))))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/var/www/html/host/stock-viewer/src/components/Login.js"],"names":["React","Component","firebase","TextField","Button","Grid","Divider","Link","swal","IconButton","InputAdornment","Visibility","VisibilityOff","history","Login","constructor","onCollectionUpdate","querySnapshot","user","forEach","doc","data","email","password","push","key","id","setState","handleInputChange","event","target","name","value","signInWithEmailAndPassword","preventDefault","state","console","log","auth","then","loginUser","localStorage","setItem","catch","error","code","ref","firestore","collection","array","hidden","toggleShow","bind","componentDidMount","unsubscribe","onSnapshot","render","endAdornment"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport firebase from '../Firebase';\nimport '../components/login.css';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport { Link } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport history from '../History';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.ref = firebase.firestore().collection('users');\n    this.state = {\n      email: '',\n      password: '',\n      user: [],\n      array: [],\n      hidden: true,\n      loginUser: ''\n    };\n    this.toggleShow = this.toggleShow.bind(this);\n  }\n\n  onCollectionUpdate = (querySnapshot) => {\n    const user = [];\n    querySnapshot.forEach((doc) => {\n      const { email, password } = doc.data();\n      user.push({\n        key: doc.id,\n        doc,\n        email,\n        password,\n      });\n    });\n    this.setState({\n      user\n    });\n  }\n\n  componentDidMount() {\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n  }\n\n  /**hide or show password field value */\n  toggleShow() {\n    this.setState({ hidden: !this.state.hidden });\n  }\n\n  handleInputChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  /**sign in with email and password */\n  signInWithEmailAndPassword = (event) => {\n    event.preventDefault();\n    const { email, password } = this.state;\n    console.log(email);\n    console.log(password);\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password).then(() => {\n        this.setState({ loginUser: email })\n        localStorage.setItem('email1', email);\n        console.log(\"login sucessfully\");\n        history.push('/Company-list')\n        // window.location.hash = '/Company-list'\n      }).catch((error) => {\n        console.log('hey error: ', error);\n        if (error.code === \"auth/user-not-found\") {\n          swal(\"Email not found\", \"Please, Signup\", \"error\");\n        } else if (error.code === \" auth/wrong-password\") {\n          swal(\"Please Enter correct password\", \"\", \"error\");\n        } else {\n          swal(\"Internal Server Error\");\n        }\n      })\n  };\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <div>\n        <div className=\"backgroung_class\">\n          <div className=\"main_class\">\n            <h1 className=\"text-center\">Stock Login</h1>\n            <Grid container spacing={1} xs={12}>\n              <Grid item sm={12} xs={12}>\n                <TextField\n                  id=\"outlined-email-input\"\n                  label=\"Email\"\n                  type=\"email\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  value={email}\n                  onChange={this.handleInputChange}\n                />\n              </Grid>\n              <Grid item sm={12} xs={12}>\n                <TextField\n                  id=\"outlined-password-input\"\n                  label=\"Password\"\n                  type={this.state.hidden ? \"password\" : \"text\"}\n                  name=\"password\"\n                  autoComplete=\"current-password\"\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  value={password}\n                  onChange={this.handleInputChange}\n                  InputProps={{\n                    endAdornment: (\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          edge=\"end\"\n                          aria-label=\"Toggle password visibility\"\n                          onClick={this.toggleShow}\n                        >\n                          {password ? <VisibilityOff /> : <Visibility />}\n                        </IconButton>\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item sm={12} xs={12}>\n                <Button color=\"primary\" disabled={!this.state.email || !this.state.password} variant=\"contained\" size=\"large\" onClick={(event) => this.signInWithEmailAndPassword(event)}>\n                  Login\n               </Button>\n              </Grid>\n              <Grid item sm={12}>\n                <Divider />\n                <div className=\"text-center\">\n                  New User? <Button color=\"primary\"><Link to=\"/sign-up\">Sign Up</Link></Button>\n                </div>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n\n"]},"metadata":{},"sourceType":"module"}