{"ast":null,"code":"var _jsxFileName = \"/var/www/html/stock-viewer/src/components/Company-list.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from '../Firebase';\nimport ReactApexChart from 'react-apexcharts';\nimport swal from 'sweetalert';\nimport '../App.css';\nimport './Company-list.css';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveCircle from '@material-ui/icons/RemoveCircle';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport API from '../service';\nimport history from '../History';\nconst options = {\n  chart: {\n    stacked: false,\n    zoom: {\n      type: 'x',\n      enabled: true\n    },\n    toolbar: {\n      autoSelected: 'zoom'\n    }\n  },\n  plotOptions: {\n    line: {\n      curve: 'smooth'\n    }\n  },\n  dataLabels: {\n    enabled: false\n  },\n  markers: {\n    size: 0,\n    style: 'full'\n  },\n  colors: ['#ff4d4d'],\n  opacity: 0.4,\n  title: {\n    text: 'Stock Price Movement',\n    align: 'left'\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 1,\n      inverseColors: false,\n      opacityFrom: 0.5,\n      opacityTo: 0,\n      stops: [0, 90, 100]\n    }\n  },\n  yaxis: {\n    min: 0,\n    max: 250000,\n    labels: {\n      formatter: function (val) {\n        return val.toFixed(0);\n      }\n    },\n    title: {\n      text: 'Price'\n    }\n  },\n  xaxis: {\n    type: 'datetime'\n  },\n  tooltip: {\n    shared: false,\n    y: {\n      formatter: function (val) {\n        return (val / 1000).toFixed(0);\n      }\n    }\n  }\n};\nconst ranges = [{\n  value: '1min',\n  label: '1 min'\n}, {\n  value: '5min',\n  label: '5 mins'\n}, {\n  value: '15min',\n  label: '15 mins'\n}, {\n  value: '30min',\n  label: '30 mins'\n}, {\n  value: '60min',\n  label: '1 hour'\n}, {\n  value: 'WEEKLY',\n  label: '1 week'\n}, {\n  value: 'MONTHLY',\n  label: '1 month'\n}];\nconst indicatorList = [{\n  value: 'SMA',\n  label: 'simple moving average (SMA)'\n}, {\n  value: 'EMA',\n  label: ' Exponential moving average (EMA) '\n}, {\n  value: 'MACD',\n  label: 'Moving average convergence / divergence (MACD)'\n}, {\n  value: 'MACDEXT',\n  label: 'Moving average convergence / divergence'\n}, {\n  value: 'APO',\n  label: 'Absolute price oscillator (APO)'\n}, {\n  value: 'RSI',\n  label: 'Relative strength index (RSI)'\n}, {\n  value: 'ROC',\n  label: ' Rate of change(ROC)'\n}, {\n  value: 'ROCR',\n  label: 'Rate of change ratio (ROCR)'\n}, {\n  value: 'ADX',\n  label: 'Average directional movement index (ADX) '\n}, {\n  value: 'AROONOSC',\n  label: ' Aroon oscillator (AROONOSC)'\n}, {\n  value: 'TRIX',\n  label: 'Triple smooth exponential moving average (TRIX)'\n}, {\n  value: 'OBV',\n  label: 'On balance volume (OBV) '\n}];\n\nclass Companylist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.checkIfalreadyAddOrNot = companyName => {\n      this.state.isSearchClick = false;\n      this.state.isOpenCompanyList = false;\n      console.log('getcompany:');\n      localStorage.getItem('email1');\n      const email = localStorage.email1;\n      console.log(companyName);\n      let companyData = [];\n      /** it's check selected company already added into database or not */\n\n      firebase.firestore().collection(\"company\").where(\"name\", \"==\", companyName).where(\"email\", \"==\", email).get().then(function (querySnapshot) {\n        console.log(\"querySnapshot\", querySnapshot);\n        querySnapshot.forEach(function (doc) {\n          const _doc$data = doc.data(),\n                name = _doc$data.name,\n                email = _doc$data.email;\n\n          console.log(\"data:\", doc.data());\n          companyData.push({\n            key: doc.id,\n            doc,\n            name,\n            email\n          });\n        });\n        console.log(\"data1:\", companyData.length);\n\n        if (companyData.length) {\n          console.log('found data', companyData);\n          swal(\"Already added!\", \"\", \"info\").then(willDelete => {\n            if (willDelete) {\n              window.location.reload();\n            }\n          }).catch(err => {\n            console.log(\"hey error:\", err);\n            swal('Internal Server Error');\n          });\n        } else {\n          console.log(\"new company\");\n          addCompanyToDatabase();\n        }\n      }).catch(err => {\n        swal('Internal Server Error');\n      });\n      /** Add comapny to database */\n\n      const addCompanyToDatabase = () => {\n        localStorage.getItem('email1');\n        let email = localStorage.email1;\n        console.log(\"isLoaded before:\", this.state.isLoaded);\n        this.ref.add({\n          symbol: this.state.companySymbol,\n          name: this.state.companyName,\n          email: email\n        }).then(docRef => {\n          window.location.reload();\n        }).catch(error => {\n          swal('Internal Server Error');\n        });\n      };\n    };\n\n    this.selectInterval = prop => event => {\n      this.state.isSelectHistorical = false;\n      let intervalApiData = [];\n      this.state.intervalArray = [];\n      this.state.isComparedCompany = false;\n      const intervalData = {\n        symbol: prop,\n        intervalValue: event.target.value\n      };\n      API.selectInterval(intervalData).then(res => {\n        try {\n          this.setState({\n            isIntervalValue: true,\n            isSelectinterval: true,\n            isSelectHistorical: false,\n            isComparedCompany: false,\n            selectedInterval: prop,\n            graphData: [],\n            isLoaded: true\n          });\n          let originalObject;\n\n          if (event.target.value === 'MONTHLY') {\n            originalObject = res['Monthly Time Series'];\n          } else if (event.target.value === 'WEEKLY') {\n            originalObject = res['Weekly Time Series'];\n          } else {\n            originalObject = res['Time Series (' + event.target.value + ')'];\n          }\n\n          console.log('originalObject: ', originalObject);\n          console.log(\"interval array======second time===>\", this.state.intervalArray);\n\n          if (originalObject) {\n            for (let key in originalObject) {\n              intervalApiData.push({\n                date: key,\n                open: originalObject[key]['1. open'],\n                high: originalObject[key]['2. high'],\n                low: originalObject[key]['3. low'],\n                close: originalObject[key]['4. close'],\n                volume: originalObject[key]['5. volume']\n              });\n            }\n\n            this.setState({\n              intervalArray: intervalApiData,\n              isIntervalValue: true\n            });\n            this.displayGraphOfInterval();\n          }\n        } catch (err) {\n          console.log(\"err====\", err);\n          swal('Internal Server Error');\n        }\n      }).catch(err => {\n        swal('Internal Server Error');\n      });\n    };\n\n    this.selectComparisonCompany = prop => event => {\n      this.state.isComparedCompany = true;\n      this.state.isSelectHistorical = false;\n      this.state.isSelectinterval = false;\n      this.state.isIndicatorGraph = false;\n      this.state.isIntervalValue = false;\n      const companySymbol = event.target.value;\n      API.selectComparisonCompany(companySymbol).then((res, err) => {\n        try {\n          this.setState({\n            isComparedCompany: true,\n            firstCompany: prop,\n            isIndicatorGraph: false,\n            selectedCompany: event.target.value\n          });\n          const originalObject = res['Time Series (5min)'];\n          console.log(\"res==========>\", originalObject);\n\n          if (originalObject) {\n            for (let key in originalObject) {\n              this.state.firstSelectedCompanyArray.push({\n                date: key,\n                open: originalObject[key]['1. open'],\n                high: originalObject[key]['2. high'],\n                low: originalObject[key]['3. low'],\n                close: originalObject[key]['4. close'],\n                volume: originalObject[key]['5. volume']\n              });\n            }\n\n            console.log(\"comparison Array1=======>\", this.state.firstSelectedCompanyArray);\n            this.comparedCompanyData();\n          }\n        } catch (err) {\n          console.log(\"err:\", err);\n          swal('Internal Server Error');\n        }\n      }).catch(err => {});\n      console.log(\"this.state.isComparedCompany:\", this.state.isComparedCompany);\n    };\n\n    this.comparedCompanyData = () => {\n      let selectedCompany = [];\n      let firstSelectedCompany = this.state.firstCompany;\n      API.selectComparisonCompany(firstSelectedCompany).then(res => {\n        try {\n          console.log(\"res============>\", res);\n\n          if (res.Note == 'Thank you for using Alpha Vantage! Our standard APâ€¦would like to target a higher API call frequency.') {\n            alert('wait 1 minute');\n          } else {\n            const originalObjectforDisplay = res['Time Series (5min)'];\n            console.log(\"originalObject===========>\", originalObjectforDisplay);\n\n            if (originalObjectforDisplay) {\n              for (let key in originalObjectforDisplay) {\n                selectedCompany.push({\n                  date: key,\n                  open: originalObjectforDisplay[key]['1. open'],\n                  high: originalObjectforDisplay[key]['2. high'],\n                  low: originalObjectforDisplay[key]['3. low'],\n                  close: originalObjectforDisplay[key]['4. close'],\n                  volume: originalObjectforDisplay[key]['5. volume']\n                });\n              }\n\n              this.setState({\n                secondSelectedCompanyArray: selectedCompany\n              });\n              console.log(\"comparison Array2=======>\", this.state.secondSelectedCompanyArray);\n            } else {\n              swal('Internal Server Error');\n            }\n          }\n          /**selecte other company then call below function */\n\n\n          if (this.state.secondSelectedCompanyArray.length && this.state.firstSelectedCompanyArray.length) {\n            this.displayGraphOfComparison();\n          }\n        } catch (err) {\n          swal('Internal Server Error');\n        }\n      });\n    };\n\n    this.getSelectedIndicatorData = prop => event => {\n      console.log(\"event:\", event.target.value);\n      console.log(\"prop:\", prop);\n      const indicatorData = {\n        selectedCompanySymbol: prop,\n        indicatorValue: event.target.value\n      };\n      API.getSelectedIndicatorData(indicatorData).then(res => {\n        try {\n          this.setState({\n            indicatorGraphData: [],\n            indicatorDataArray: [],\n            isIndicatorGraph: true,\n            isIntervalValue: false,\n            isSelectHistorical: false,\n            isComparedCompany: false\n          });\n          const originalObject = res['Technical Analysis: ' + [event.target.value]];\n          console.log(\"result:\", ['Technical Analysis: ' + [event.target.value]]);\n          console.log(\"originalObject:\", originalObject);\n          console.log(\"isIndicatorGraph:\", this.state.isIndicatorGraph);\n\n          if (originalObject) {\n            for (let key in originalObject) {\n              this.state.indicatorDataArray.push({\n                date: key,\n                indicatorObj: originalObject[key][event.target.value]\n              });\n            }\n          } else {\n            swal('Internal Server Error');\n          }\n\n          console.log(\"indicatorDataArray:\", this.state.indicatorDataArray);\n          this.displayGraphOfIndicator();\n        } catch (err) {\n          swal('Internal Server Error');\n        }\n      }).catch(err => {\n        console.log('hey error: ', err);\n      });\n    };\n\n    this.getDate = () => {\n      let date = new Date().toDateString();\n      this.setState({\n        date\n      });\n    };\n\n    this.logOut = () => {\n      firebase.auth().signOut().then(function () {\n        console.log('Signed Out');\n        localStorage.clear();\n        localStorage.removeItem('email1');\n        console.log(localStorage);\n        history.push('/');\n      }, function (error) {\n        swal('Internal Server Error');\n      });\n    };\n\n    this.ref = firebase.firestore().collection('company');\n    this.unsubscribe = null;\n    this.state = {\n      user: [],\n      array: [],\n      searchResponse: [],\n      results: [],\n      companyData: [],\n      query: '',\n      value: '',\n      searchValue: '',\n      companySymbol: '',\n      companyName: '',\n      symbol: '',\n      name: '',\n      userEmail: '',\n      grapharray: [],\n      date: \"\",\n      open: '',\n      close: '',\n      high: '',\n      low: '',\n      volume: '',\n      indicatorObj: '',\n      historicalArray: [],\n      intervalArray: [],\n      graphData: [],\n      intervalData: [],\n      firstSelectedCompanyArray: [],\n      secondSelectedCompanyArray: [],\n      indicatorDataArray: [],\n      indicatorGraphData: [],\n      comparisonOfVolume: [],\n      historicalOpen: '',\n      historicalClose: '',\n      historicalHigh: '',\n      historicalLow: '',\n      historicalVolume: '',\n      historicalAdjClose: '',\n      values: '',\n      firstCompany: '',\n      selectedCompany: '',\n      selectedInterval: '',\n      intervalRange: '',\n      clickCompanyName: '',\n      clickCompanySymbol: '',\n      firstSelectedCompany: '',\n      isToggleOn: true,\n      setOpen: false,\n      modalOpen: false,\n      isLoaded: false,\n      isSearchClick: false,\n      isOpenSearch: false,\n      isOpenCompanyList: false,\n      isSelectinterval: false,\n      isGraphDisplay: false,\n      isSelectHistorical: false,\n      isIntervalValue: false,\n      isIndicatorGraph: false,\n      isComparedCompany: false,\n      checkAlreadyAddOrNot: false\n    };\n    this.addCompanytoWatchlist = this.addCompanytoWatchlist.bind(this);\n    this.getSearchValue = this.getSearchValue.bind(this);\n    this.submitSearchValue = this.submitSearchValue.bind(this);\n    this.getCompany = this.getCompany.bind(this);\n    this.displaySelectedCompanyGraph = this.displaySelectedCompanyGraph.bind(this);\n    this.openSearchbar = this.openSearchbar.bind(this);\n    this.displayCompanyList = this.displayCompanyList.bind(this);\n    this.logOut = this.logOut.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCompany();\n    this.getDate();\n    this.unsubscribe = this.ref.onSnapshot(this.getCompany);\n  }\n  /**\n      * @param {object} event get name or symbol of search company\n      */\n\n\n  getSearchValue(event) {\n    this.setState({\n      value: event.target.value,\n      searchValue: event.target.value\n    });\n  }\n  /**\n      * @param {object} event validation of search button \n      */\n\n\n  submitSearchValue(event) {\n    this.setState({\n      value: '',\n      isLoaded: false\n    });\n    /**validation for search input */\n\n    if (!this.state.value) {\n      swal(\"Please, Enter value\", \"\", \"info\");\n    } else {\n      console.log(\"name:\", this.state.value);\n      console.log(\"searchValue\", this.state.searchValue);\n      event.preventDefault();\n      this.getApiData();\n      this.setState({\n        value: ''\n      });\n    }\n  }\n  /**\n      * @param {object} data call add company function and get name and symbol of add company \n      */\n\n\n  addCompanytoWatchlist(data) {\n    console.log('data: ', data);\n    this.setState({\n      companySymbol: data['1. symbol'],\n      companyName: data['2. name']\n    });\n    this.getApiData();\n    this.addComapny();\n  }\n  /**\n   * @param {string} companySymbol wise display historical data table \n   */\n\n\n  displayHistoricalData(companySymbol) {\n    const historicalData = companySymbol;\n    console.log(\"historical data:\", historicalData);\n    console.log(\"symbol of selected company==============>\", companySymbol);\n    console.log(\"type:\", typeof companySymbol);\n    this.setState({\n      isSelectHistorical: true,\n      isSelectinterval: false,\n      historicalArray: [],\n      isComparedCompany: false\n    });\n    API.displayHistoricalData(historicalData).then(res => {\n      try {\n        const originalObject = res['Time Series (Daily)'];\n        console.log('originalObject: ', originalObject);\n\n        if (originalObject) {\n          for (let key in originalObject) {\n            this.state.historicalArray.push({\n              date: key,\n              open: originalObject[key]['1. open'],\n              high: originalObject[key]['2. high'],\n              low: originalObject[key]['3. low'],\n              close: originalObject[key]['4. close'],\n              adjclose: originalObject[key]['5. adjusted close'],\n              volume: originalObject[key]['6. volume']\n            });\n          }\n\n          console.log(\"historicalArray==========>\", this.state.historicalArray);\n          this.setState({\n            isSelectHistorical: true\n          });\n        } else {\n          swal('Internal Server Error');\n        }\n      } catch (err) {\n        swal('Internal Server Error');\n      }\n    }).catch(err => {\n      swal('Internal Server Error');\n    });\n  }\n  /** selected symbol to add in watchlist */\n\n\n  addComapny() {\n    if (this.state.companySymbol) {\n      console.log(\"addCompany2:\", this.state.companySymbol);\n      return swal({\n        title: this.state.companySymbol,\n        text: this.state.companyName,\n        icon: \"success\",\n        dangerMode: true\n      }).then(willDelete => {\n        if (willDelete) {\n          this.checkIfalreadyAddOrNot(this.state.companyName);\n        }\n      });\n    }\n  }\n  /**\n   * @param {string} companyName already add or not \n   */\n\n\n  /** display graph of selected interval */\n  displayGraphOfInterval() {\n    const graphSeries = this.state.intervalArray;\n    let chartData = 1484418600000;\n    this.state.intervalData = [];\n\n    for (let i = 0; i < graphSeries.length; i++) {\n      chartData = chartData + 86400000;\n      let obj = JSON.parse(graphSeries[i].volume);\n      let innerArr = [chartData, obj];\n      this.state.intervalData.push(innerArr);\n    }\n\n    let series = [{\n      name: 'Stock price',\n      type: 'area',\n      data: this.state.intervalData\n    }];\n    /**display chart of selected interval */\n\n    let chartrender = React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: options,\n      series: series,\n      type: \"area\",\n      height: \"500\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, chartrender);\n  }\n  /** select company and call api of selected company */\n\n\n  /** display table of both company*/\n  displayGraphOfComparison() {\n    if (this.state.firstSelectedCompanyArray.length && this.state.secondSelectedCompanyArray.length) {\n      this.state.comparisonOfVolume = [];\n      console.log(\"length1:::\", this.state.firstSelectedCompanyArray.length);\n      console.log(\"length2:::\", this.state.secondSelectedCompanyArray.length);\n\n      if (this.state.firstSelectedCompanyArray.length > this.state.secondSelectedCompanyArray.length) {\n        for (let i = 0; i < this.state.secondSelectedCompanyArray.length; i++) {\n          console.log(\"volume1:\", this.state.firstSelectedCompanyArray[i].volume);\n          console.log(\"volume2:\", this.state.secondSelectedCompanyArray[i].volume);\n          this.state.comparisonOfVolume.push({\n            date: this.state.firstSelectedCompanyArray[i].date,\n            diffrence: this.state.secondSelectedCompanyArray[i].volume - this.state.firstSelectedCompanyArray[i].volume,\n            first: this.state.secondSelectedCompanyArray[i].volume,\n            second: this.state.firstSelectedCompanyArray[i].volume\n          });\n        }\n      } else {\n        for (let i = 0; i < this.state.firstSelectedCompanyArray.length; i++) {\n          console.log(\"volume1:\", this.state.firstSelectedCompanyArray[i].volume);\n          console.log(\"volume2:\", this.state.secondSelectedCompanyArray[i].volume);\n          this.state.comparisonOfVolume.push({\n            date: this.state.firstSelectedCompanyArray[i].date,\n            diffrence: this.state.secondSelectedCompanyArray[i].volume - this.state.firstSelectedCompanyArray[i].volume,\n            first: this.state.secondSelectedCompanyArray[i].volume,\n            second: this.state.firstSelectedCompanyArray[i].volume\n          });\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593\n        },\n        __self: this\n      }, \"Date\"), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }, this.state.firstCompany), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, this.state.selectedCompany), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }, \"Differnce\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }, this.state.comparisonOfVolume.map(data => React.createElement(TableRow, {\n        key: data.diffrence,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }, data.date), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604\n        },\n        __self: this\n      }, data.first), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 605\n        },\n        __self: this\n      }, data.second), React.createElement(TableCell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, data.diffrence)))))));\n    }\n  }\n  /** select indicator and call API of selcted indicator */\n\n\n  /** display graph of selected indicator */\n  displayGraphOfIndicator() {\n    console.log(\"indicator fun called\");\n    let graphSeries = this.state.indicatorDataArray;\n    console.log(\"length:\", graphSeries.length);\n    let chartData = 1484418600000;\n\n    for (let i = 0; i < graphSeries.length; i++) {\n      chartData = chartData + 86400000;\n      let obj = JSON.parse(graphSeries[i].indicatorObj);\n      let innerArr = [chartData, obj];\n      this.state.indicatorGraphData.push(innerArr);\n    }\n\n    console.log(\"graphData:\", this.state.indicatorGraphData);\n    let options = {\n      chart: {\n        stacked: false,\n        zoom: {\n          type: 'x',\n          enabled: true\n        },\n        toolbar: {\n          autoSelected: 'zoom'\n        }\n      },\n      plotOptions: {\n        line: {\n          curve: 'smooth'\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      markers: {\n        size: 0,\n        style: 'full'\n      },\n      colors: ['#ff4d4d'],\n      opacity: 0.4,\n      title: {\n        text: 'Stock Price Movement',\n        align: 'left'\n      },\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shadeIntensity: 1,\n          inverseColors: false,\n          opacityFrom: 0.5,\n          opacityTo: 0,\n          stops: [0, 90, 100]\n        }\n      },\n      yaxis: {\n        min: 0,\n        max: 250,\n        labels: {\n          formatter: function (val) {\n            return val.toFixed(0);\n          }\n        },\n        title: {\n          text: 'Price'\n        }\n      },\n      xaxis: {\n        type: 'datetime'\n      },\n      tooltip: {\n        shared: false,\n        y: {\n          formatter: function (val) {\n            return (val / 1000).toFixed(0);\n          }\n        }\n      }\n    };\n    let series = [{\n      name: 'Stock price',\n      data: this.state.indicatorGraphData\n    }]; // options.yaxis.min = 0;\n    // options.yaxis.max = 250;\n\n    console.log(\"options.yaxis.min:\", options.yaxis.min);\n    /**display graph of selected indicator */\n\n    let chartrender = React.createElement(\"div\", {\n      id: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 738\n      },\n      __self: this\n    }, React.createElement(ReactApexChart, {\n      options: options,\n      series: series,\n      type: \"area\",\n      height: \"500\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 739\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741\n      },\n      __self: this\n    }, chartrender);\n  }\n  /** display watchlist and graph or search list */\n\n\n  displayCompanyList() {\n    const date = this.state.date;\n    /**any company added into current user watchlist */\n\n    if (this.state.grapharray.length) {\n      let graphSeries = this.state.grapharray;\n      let chartData = 1484418600000;\n      let graphData = [];\n\n      for (let i = 0; i < graphSeries.length; i++) {\n        chartData = chartData + 86400000;\n        let obj = JSON.parse(graphSeries[i].volume);\n        let innerArr = [chartData, obj];\n        graphData.push(innerArr);\n      }\n\n      let series = [{\n        name: 'Stock price',\n        data: graphData\n      }];\n      /**display graph of selected company */\n\n      var chartrender = React.createElement(\"div\", {\n        id: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 768\n        },\n        __self: this\n      }, React.createElement(ReactApexChart, {\n        options: options,\n        series: series,\n        type: \"area\",\n        height: \"450\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 769\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          color: 'gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770\n        },\n        __self: this\n      }, \"Open: \"), \" \", React.createElement(\"span\", {\n        style: {\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770\n        },\n        __self: this\n      }, this.state.open), React.createElement(\"span\", {\n        style: {\n          color: 'gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 771\n        },\n        __self: this\n      }, \"Close: \"), \" \", React.createElement(\"span\", {\n        style: {\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 771\n        },\n        __self: this\n      }, this.state.close), React.createElement(\"span\", {\n        style: {\n          color: 'gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772\n        },\n        __self: this\n      }, \"High: \"), \" \", React.createElement(\"span\", {\n        style: {\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772\n        },\n        __self: this\n      }, this.state.high), React.createElement(\"span\", {\n        style: {\n          color: 'gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773\n        },\n        __self: this\n      }, \"Low: \"), \" \", React.createElement(\"span\", {\n        style: {\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 773\n        },\n        __self: this\n      }, this.state.low), React.createElement(\"span\", {\n        style: {\n          color: 'gray'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774\n        },\n        __self: this\n      }, \"Volume: \"), \" \", React.createElement(\"span\", {\n        style: {\n          marginRight: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 774\n        },\n        __self: this\n      }, this.state.volume));\n    }\n    /**it's display graph or serch response table */\n\n\n    let showGraphOrSearchResult = this.state.searchResponse.length ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779\n      },\n      __self: this\n    }, \"Search Response....\")), this.state.searchResponse.map(data => React.createElement(List, {\n      key: data['1. symbol'],\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      className: \"search_list\",\n      primary: data['1. symbol'],\n      secondary: data['2. name'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      className: \"search_list1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      color: \"primary\",\n      edge: \"end\",\n      \"aria-label\": \"Delete\",\n      onClick: () => this.addCompanytoWatchlist(data),\n      className: \"addIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786\n      },\n      __self: this\n    }))))))) : this.state.searchResponse ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"company_symbol\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793\n      },\n      __self: this\n    }, this.state.clickCompanySymbol), React.createElement(\"span\", {\n      style: {\n        color: 'gray'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793\n      },\n      __self: this\n    }, this.state.clickCompanyName), this.state.isGraphDisplay ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"historical_data\",\n      style: {\n        padding: 10\n      },\n      onClick: () => this.displayHistoricalData(this.state.clickCompanySymbol),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795\n      },\n      __self: this\n    }, \"Historical Data\"), React.createElement(TextField, {\n      select: true,\n      style: {\n        float: 'right',\n        padding: 10\n      },\n      value: this.state.values.intervalRange,\n      onChange: this.selectInterval(this.state.clickCompanySymbol),\n      InputProps: {\n        startAdornment: React.createElement(InputAdornment, {\n          position: \"start\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 802\n          },\n          __self: this\n        }, \"Interval\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 796\n      },\n      __self: this\n    }, ranges.map(option => React.createElement(MenuItem, {\n      key: option.value,\n      value: option.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 805\n      },\n      __self: this\n    }, option.label))), React.createElement(TextField, {\n      select: true,\n      style: {\n        float: 'right',\n        padding: 10\n      },\n      value: this.state.values.intervalRange,\n      onChange: this.selectComparisonCompany(this.state.clickCompanySymbol),\n      InputProps: {\n        startAdornment: React.createElement(InputAdornment, {\n          position: \"start\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 816\n          },\n          __self: this\n        }, \"Comparison\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810\n      },\n      __self: this\n    }, this.state.companyData.map(company => React.createElement(MenuItem, {\n      key: company.symbol,\n      value: company.symbol,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 819\n      },\n      __self: this\n    }, company.symbol))), React.createElement(TextField, {\n      select: true,\n      style: {\n        float: 'right',\n        padding: 10\n      },\n      value: this.state.values.intervalRange,\n      onChange: this.getSelectedIndicatorData(this.state.clickCompanySymbol),\n      InputProps: {\n        startAdornment: React.createElement(InputAdornment, {\n          position: \"start\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 830\n          },\n          __self: this\n        }, \"Indicator\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824\n      },\n      __self: this\n    }, indicatorList.map(indicator => React.createElement(MenuItem, {\n      key: indicator.value,\n      value: indicator.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 833\n      },\n      __self: this\n    }, indicator.label)))) : '', this.state.isSelectHistorical ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 842\n      },\n      __self: this\n    }, React.createElement(Table, {\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 843\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 844\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 845\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846\n      },\n      __self: this\n    }, \"Date\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 847\n      },\n      __self: this\n    }, \"Open\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 848\n      },\n      __self: this\n    }, \"High\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 849\n      },\n      __self: this\n    }, \"Low\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 850\n      },\n      __self: this\n    }, \"Close\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 851\n      },\n      __self: this\n    }, \"Adj Close\"), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852\n      },\n      __self: this\n    }, \"Volume\"))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 855\n      },\n      __self: this\n    }, this.state.historicalArray.map(historicalData => React.createElement(TableRow, {\n      key: historicalData.date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 857\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858\n      },\n      __self: this\n    }, historicalData.date), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 859\n      },\n      __self: this\n    }, historicalData.open), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 860\n      },\n      __self: this\n    }, historicalData.high), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 861\n      },\n      __self: this\n    }, historicalData.low), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862\n      },\n      __self: this\n    }, historicalData.close), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863\n      },\n      __self: this\n    }, historicalData.adjclose), React.createElement(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864\n      },\n      __self: this\n    }, historicalData.volume))))))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }, chartrender ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }, this.state.isIntervalValue ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }, this.displayGraphOfInterval()) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }, this.state.isIndicatorGraph ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }, this.displayGraphOfIndicator()) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }, this.state.isComparedCompany ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }, this.displayGraphOfComparison()) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 870\n      },\n      __self: this\n    }, chartrender)))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 871\n      },\n      __self: this\n    }))) : 'No data found';\n    /**display watchlist company list */\n\n    let displayCompany = this.state.companyData.length ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 874\n      },\n      __self: this\n    }, this.state.companyData.map(company => React.createElement(List, {\n      key: company.key,\n      className: \"cursorClass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 875\n      },\n      __self: this\n    }, React.createElement(ListItem, {\n      onClick: () => this.displaySelectedCompanyGraph(company),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876\n      },\n      __self: this\n    }, React.createElement(ListItemText, {\n      primary: company.symbol,\n      secondary: company.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 877\n      },\n      __self: this\n    }), React.createElement(ListItemSecondaryAction, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 878\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      edge: \"end\",\n      \"aria-label\": \"Delete\",\n      style: {\n        color: '#ff4d4d'\n      },\n      onClick: this.deleteCompany.bind(this, company.key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 879\n      },\n      __self: this\n    }, React.createElement(RemoveCircle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 880\n      },\n      __self: this\n    })))))), \" \") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885\n      },\n      __self: this\n    }, \" \", React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885\n      },\n      __self: this\n    }, \"Add Comapany to watchlist\")));\n    /**dispaly graph or search list and no company added or search then dispaly 'no data found' */\n\n    let displayData = this.state.companyData.length ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 887\n      },\n      __self: this\n    }, showGraphOrSearchResult) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 887\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 887\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 887\n      },\n      __self: this\n    }, \"No Company Found\")));\n    /**when searchbar is open but not enter a value */\n\n    if (this.state.isOpenSearch && !this.state.isSearchClick) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 892\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"grid_class\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 893\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          fontSize: 25,\n          marginLeft: 8,\n          color: '#fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 894\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 894\n        },\n        __self: this\n      }, \"Stock\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 894\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        style: {\n          fontSize: 17,\n          color: 'gray',\n          marginLeft: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 895\n        },\n        __self: this\n      }, date), React.createElement(\"div\", {\n        className: \"logout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 896\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 897\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        onClick: () => this.logOut(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 897\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 898\n        },\n        __self: this\n      }, \"Logout\"))))), this.addComapny(), React.createElement(\"div\", {\n        className: \"grid_class1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 903\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"company_list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        spacing: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 905\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 906\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          marginLeft: 18\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 907\n        },\n        __self: this\n      }, \"Manage WatchList\")), React.createElement(Grid, {\n        item: true,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 909\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        onClick: () => this.openCompanyList(),\n        style: {\n          color: '#3f51b5',\n          cursor: 'pointer'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 910\n        },\n        __self: this\n      }, \"Done\"))), this.state.companyData.map(company => React.createElement(List, {\n        key: company.key,\n        className: \"vl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 914\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 915\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        primary: company.symbol,\n        secondary: company.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 916\n        },\n        __self: this\n      }), React.createElement(ListItemSecondaryAction, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 917\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        edge: \"end\",\n        \"aria-label\": \"Delete\",\n        style: {\n          color: '#ff4d4d'\n        },\n        onClick: this.deleteCompany.bind(this, company.key),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 918\n        },\n        __self: this\n      }, React.createElement(RemoveCircle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 919\n        },\n        __self: this\n      }))))))), React.createElement(\"div\", {\n        className: \"search_bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 926\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        noWrap: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 927\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"outlined-with-placeholder\",\n        label: \"Search\",\n        className: \"search_input\",\n        value: this.state.value,\n        onChange: this.getSearchValue,\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 928\n        },\n        __self: this\n      }), React.createElement(Button, {\n        id: \"search\",\n        onClick: this.submitSearchValue,\n        style: {\n          color: '#fff'\n        },\n        disabled: !this.state.value,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 937\n        },\n        __self: this\n      }, \"Search\")))));\n      /**searchbar is open then it's return */\n    } else if (this.state.isSearchClick) {\n      if (!this.state.searchResponse.length) {\n        console.log(\"========else if ========if======\");\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 950\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"grid_class\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 951\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            fontSize: 25,\n            marginLeft: 8,\n            color: '#fff'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 952\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 952\n          },\n          __self: this\n        }, \"Stock\")), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 952\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          style: {\n            fontSize: 17,\n            color: 'gray',\n            marginLeft: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 953\n          },\n          __self: this\n        }, date), React.createElement(\"div\", {\n          className: \"logout\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 954\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 955\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"contained\",\n          onClick: () => this.logOut(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 955\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 956\n          },\n          __self: this\n        }, \"Logout\"))))), this.addComapny(), React.createElement(\"div\", {\n          className: \"grid_class1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 962\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"company_list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 963\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          spacing: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 964\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          sm: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 965\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            marginLeft: 18\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 966\n          },\n          __self: this\n        }, \"Manage Watchlist\")), React.createElement(Grid, {\n          item: true,\n          sm: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 968\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          onClick: () => this.openCompanyList(),\n          style: {\n            color: '#3f51b5'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 969\n          },\n          __self: this\n        }, \"Done\"))), this.state.companyData.map(company => React.createElement(List, {\n          key: company.key,\n          className: \"cursorClass vl\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 973\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          onClick: () => this.displaySelectedCompanyGraph(company),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 974\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          primary: company.symbol,\n          secondary: company.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 975\n          },\n          __self: this\n        }), React.createElement(ListItemSecondaryAction, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 976\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"Delete\",\n          style: {\n            color: '#ff4d4d'\n          },\n          onClick: this.deleteCompany.bind(this, company.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 977\n          },\n          __self: this\n        }, React.createElement(RemoveCircle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 978\n          },\n          __self: this\n        }))))))), React.createElement(\"div\", {\n          className: \"searching_list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 985\n          },\n          __self: this\n        }, React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 986\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"searchCompany_list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 986\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            marginRight: 296\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 987\n          },\n          __self: this\n        }, \"Showing Results for: \", React.createElement(\"span\", {\n          style: {\n            textTransform: 'capitalize'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 987\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 987\n          },\n          __self: this\n        }, this.state.searchValue))), \"No Data Found\")))));\n      } else {\n        console.log(\"else if =========else\");\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 998\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"grid_class\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 999\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            fontSize: 25,\n            marginLeft: 8,\n            color: '#fff'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1000\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1000\n          },\n          __self: this\n        }, \"Stock\")), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1000\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          style: {\n            fontSize: 17,\n            color: 'gray',\n            marginLeft: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1001\n          },\n          __self: this\n        }, date), React.createElement(\"div\", {\n          className: \"logout\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1002\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1003\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"contained\",\n          onClick: () => this.logOut(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1003\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1004\n          },\n          __self: this\n        }, \"Logout\"))))), this.addComapny(), React.createElement(\"div\", {\n          className: \"grid_class1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1009\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"company_list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1010\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          spacing: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1012\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          sm: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1013\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            marginLeft: 18\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1014\n          },\n          __self: this\n        }, \"Manage Watchlist\")), React.createElement(Grid, {\n          item: true,\n          sm: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1016\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          onClick: () => this.openCompanyList(),\n          style: {\n            color: '#3f51b5',\n            cursor: 'pointer'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1017\n          },\n          __self: this\n        }, \"Done\"))), this.state.companyData.map(company => React.createElement(List, {\n          key: company.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1021\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          className: \"vl\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1022\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          primary: company.symbol,\n          secondary: company.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1023\n          },\n          __self: this\n        }), React.createElement(ListItemSecondaryAction, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1024\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          edge: \"end\",\n          \"aria-label\": \"Delete\",\n          style: {\n            color: '#ff4d4d'\n          },\n          onClick: this.deleteCompany.bind(this, company.key),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1025\n          },\n          __self: this\n        }, React.createElement(RemoveCircle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1026\n          },\n          __self: this\n        }))))))), React.createElement(\"div\", {\n          className: \"search_bar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1033\n          },\n          __self: this\n        }, React.createElement(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1034\n          },\n          __self: this\n        }, React.createElement(TextField, {\n          id: \"outlined-with-placeholder\",\n          label: \"Search\",\n          className: \"search_input\",\n          value: this.state.value,\n          onChange: this.getSearchValue,\n          margin: \"normal\",\n          variant: \"outlined\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1035\n          },\n          __self: this\n        }), React.createElement(Button, {\n          className: \"search_button\",\n          id: \"search\",\n          disabled: !this.state.value,\n          onClick: this.submitSearchValue,\n          style: {\n            color: '#fff'\n          },\n          autoFocus: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1044\n          },\n          __self: this\n        }, \"Search\")), React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1049\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"searchCompany_list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1049\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            marginRight: 296\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1050\n          },\n          __self: this\n        }, \"Showing Results for: \", React.createElement(\"span\", {\n          style: {\n            textTransform: 'capitalize'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1050\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1050\n          },\n          __self: this\n        }, this.state.searchValue))), this.state.searchResponse.map(data => React.createElement(List, {\n          key: data['1. symbol'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1053\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1054\n          },\n          __self: this\n        }, React.createElement(ListItemText, {\n          primary: data['1. symbol'],\n          secondary: data['2. name'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1055\n          },\n          __self: this\n        }), React.createElement(ListItemSecondaryAction, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1056\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          color: \"primary\",\n          edge: \"end\",\n          \"aria-label\": \"Delete\",\n          onClick: () => this.addCompanytoWatchlist(data),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1057\n          },\n          __self: this\n        }, React.createElement(AddIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1058\n          },\n          __self: this\n        }))))))), \" \"))));\n      }\n    } else {\n      if (!this.state.isOpenCompanyList) {\n        console.log(\"=====else ==========if\");\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1074\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"grid_class\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1075\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            fontSize: 28,\n            marginLeft: 8,\n            color: '#fff'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1076\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1076\n          },\n          __self: this\n        }, \"Stock\")), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1076\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          style: {\n            fontSize: 17,\n            color: 'gray',\n            marginLeft: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1077\n          },\n          __self: this\n        }, date), React.createElement(\"div\", {\n          className: \"logout\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1078\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1079\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"contained\",\n          onClick: () => this.logOut(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1079\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1080\n          },\n          __self: this\n        }, \"Logout\"))))), React.createElement(\"div\", {\n          className: \"grid_class1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1084\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"company_list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1085\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"plus_class\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1086\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          spacing: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1087\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          sm: 4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1088\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          color: \"primary\",\n          edge: \"end\",\n          \"aria-label\": \"Delete\",\n          className: \"addIcon\",\n          onClick: () => this.openSearchbar(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1089\n          },\n          __self: this\n        }, React.createElement(AddIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1090\n          },\n          __self: this\n        }))), React.createElement(Grid, {\n          item: true,\n          sm: 8,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1093\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1094\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1094\n          },\n          __self: this\n        }, \"Manage WatchList\"))))), displayCompany), React.createElement(\"div\", {\n          className: \"graph_list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1100\n          },\n          __self: this\n        }, displayData)));\n      }\n    }\n  }\n  /** get data of searching company */\n\n\n  getApiData() {\n    console.log(\"value:\", this.state.value);\n    const companySymbol = this.state.value;\n    API.getApiData(companySymbol).then(res => {\n      try {\n        console.log(\"resssssssss:\", res);\n        console.log(\"data of response:\", res['bestMatches']);\n        this.setState({\n          searchResponse: res['bestMatches'],\n          isSearchClick: true,\n          isLoaded: true\n        });\n\n        if (!this.state.searchResponse.length) {\n          console.log(\"searchrespone:\", this.state.searchResponse.length);\n          console.log(\"===if callling===\");\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1129\n            },\n            __self: this\n          }, \"\\\"No Data Found\\\"\");\n        }\n      } catch (err) {\n        swal('Internal Server Error');\n      }\n    }).catch(err => {\n      swal('Internal Server Error');\n    });\n  }\n  /** get current date */\n\n\n  /**\n   * @param {string} id wise delete company from watchlist \n   */\n  deleteCompany(id) {\n    firebase.firestore().collection('company').doc(id).delete().then(() => {\n      console.log(\"cdata:\", this.state.companyData);\n      swal(\"Successfully deleted!\", \"\", \"success\");\n      console.log(\"Document successfully deleted!\");\n\n      if (this.state.companyData.length === 1) {\n        window.location.reload();\n      }\n    }).catch(error => {\n      swal('Internal Server Error');\n    });\n  }\n  /**\n   * @param {object} data wise display graph \n   */\n\n\n  displaySelectedCompanyGraph(data) {\n    this.state.isSelectHistorical = false;\n    this.state.isIndicatorGraph = false;\n    this.state.isComparedCompany = false;\n    this.state.isSelectinterval = false;\n    this.state.isIntervalValue = false;\n    this.setState({\n      isLoaded: false,\n      isSelectinterval: false,\n      isSelectHistorical: false,\n      isComparedCompany: false,\n      isIndicatorGraph: false\n    });\n    console.log('data: ', data);\n    let grapharray = [];\n    const companySymbol = data.symbol;\n    API.displaySelectedCompanyGraph(companySymbol).then(res => {\n      try {\n        if (!res) {\n          swal(\"Click after a minute\");\n        } else {\n          const originalObject = res['Time Series (5min)'];\n\n          if (originalObject) {\n            for (let key in originalObject) {\n              grapharray.push({\n                date: key,\n                open: originalObject[key]['1. open'],\n                high: originalObject[key]['2. high'],\n                low: originalObject[key]['3. low'],\n                close: originalObject[key]['4. close'],\n                volume: originalObject[key]['5. volume']\n              });\n            }\n          } else {\n            swal('Internal Server Error');\n          }\n\n          if (!grapharray.length) {\n            setTimeout(this.setState({\n              isLoaded: true\n            }), 3000);\n            swal('click after a minue');\n          } else {\n            console.log(\"open:\", grapharray['0'].open);\n            console.log(\"isGraphDisplay before======>\", this.state.isGraphDisplay);\n            this.setState({\n              grapharray: grapharray,\n              open: grapharray['0'].open,\n              close: grapharray['0'].close,\n              high: grapharray['0'].high,\n              low: grapharray['0'].low,\n              volume: grapharray['0'].volume,\n              clickCompanyName: data.name,\n              clickCompanySymbol: data.symbol,\n              isLoaded: true,\n              isGraphDisplay: true\n            });\n            console.log(\"isGraphDisplay after======>\", this.state.isGraphDisplay);\n          }\n        }\n      } catch (err) {\n        swal('Internal Server Error');\n      }\n    }).catch(err => {\n      swal('Internal Serverhnjhnu');\n    });\n  }\n  /** logout and clear localstorage */\n\n\n  /** open searchbar onclick of plus sign */\n  openSearchbar() {\n    this.setState({\n      isOpenSearch: true\n    });\n  }\n  /** display watchlist onclick of done */\n\n\n  openCompanyList() {\n    this.setState({\n      isOpenCompanyList: false\n    });\n    console.log(\"isOpenCompanyList:\", this.state.isOpenCompanyList);\n    history.push('/Watch-list');\n  }\n  /** get current user added company from database */\n\n\n  getCompany() {\n    let companyData = [];\n    localStorage.getItem('email1');\n    let email = localStorage.email1;\n    console.log('email==========>', email);\n    firebase.firestore().collection(\"company\").where(\"email\", \"==\", email).get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        const _doc$data2 = doc.data(),\n              name = _doc$data2.name,\n              symbol = _doc$data2.symbol;\n\n        companyData.push({\n          key: doc.id,\n          doc,\n          name,\n          symbol\n        });\n      });\n      setLoader(true);\n\n      if (companyData.length) {\n        console.log('found data==========>', companyData);\n        setTheState(companyData);\n        console.log(\"call\"); // displayGraph()\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1284\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1285\n          },\n          __self: this\n        }, \"No data found\"));\n      }\n    }).catch(function (error) {\n      console.log(\"Error getting documents: \", error);\n    });\n\n    let setLoader = isLoaded => {\n      this.setState({\n        isLoaded: isLoaded\n      });\n    };\n\n    let setTheState = companyData => {\n      this.setState({\n        companyData: companyData,\n        isLoaded: true\n      });\n    };\n\n    let displayGraph = () => {\n      console.log(\"companyData before:\", this.state.companyData);\n      console.log(\"companyData:\", this.state.companyData);\n      let firstCompanySymbol = this.state.companyData[0];\n      console.log(\"firstCompanySymbol\", firstCompanySymbol);\n      this.displaySelectedCompanyGraph(firstCompanySymbol);\n    };\n  }\n\n  render() {\n    const isLoaded = this.state.isLoaded;\n\n    if (!isLoaded) {\n      return React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1318\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"lds-spinner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1319\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1319\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1319\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1319\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1319\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1319\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1319\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1319\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1319\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1319\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1319\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1319\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1319\n        },\n        __self: this\n      })));\n    } else if (isLoaded) {\n      return React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1324\n        },\n        __self: this\n      }, this.displayCompanyList());\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1330\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1331\n        },\n        __self: this\n      }, \"Sorry no data found\"));\n    }\n  }\n\n}\n\nexport default Companylist;","map":{"version":3,"sources":["/var/www/html/stock-viewer/src/components/Company-list.js"],"names":["React","Component","Link","firebase","ReactApexChart","swal","Grid","Button","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","AddIcon","RemoveCircle","Typography","TextField","InputAdornment","MenuItem","Table","TableBody","TableCell","TableHead","TableRow","Paper","API","history","options","chart","stacked","zoom","type","enabled","toolbar","autoSelected","plotOptions","line","curve","dataLabels","markers","size","style","colors","opacity","title","text","align","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","yaxis","min","max","labels","formatter","val","toFixed","xaxis","tooltip","shared","y","ranges","value","label","indicatorList","Companylist","constructor","props","checkIfalreadyAddOrNot","companyName","state","isSearchClick","isOpenCompanyList","console","log","localStorage","getItem","email","email1","companyData","firestore","collection","where","get","then","querySnapshot","forEach","doc","data","name","push","key","id","length","willDelete","window","location","reload","catch","err","addCompanyToDatabase","isLoaded","ref","add","symbol","companySymbol","docRef","error","selectInterval","prop","event","isSelectHistorical","intervalApiData","intervalArray","isComparedCompany","intervalData","intervalValue","target","res","setState","isIntervalValue","isSelectinterval","selectedInterval","graphData","originalObject","date","open","high","low","close","volume","displayGraphOfInterval","selectComparisonCompany","isIndicatorGraph","firstCompany","selectedCompany","firstSelectedCompanyArray","comparedCompanyData","firstSelectedCompany","Note","alert","originalObjectforDisplay","secondSelectedCompanyArray","displayGraphOfComparison","getSelectedIndicatorData","indicatorData","selectedCompanySymbol","indicatorValue","indicatorGraphData","indicatorDataArray","indicatorObj","displayGraphOfIndicator","getDate","Date","toDateString","logOut","auth","signOut","clear","removeItem","unsubscribe","user","array","searchResponse","results","query","searchValue","userEmail","grapharray","historicalArray","comparisonOfVolume","historicalOpen","historicalClose","historicalHigh","historicalLow","historicalVolume","historicalAdjClose","values","intervalRange","clickCompanyName","clickCompanySymbol","isToggleOn","setOpen","modalOpen","isOpenSearch","isGraphDisplay","checkAlreadyAddOrNot","addCompanytoWatchlist","bind","getSearchValue","submitSearchValue","getCompany","displaySelectedCompanyGraph","openSearchbar","displayCompanyList","componentDidMount","onSnapshot","preventDefault","getApiData","addComapny","displayHistoricalData","historicalData","adjclose","icon","dangerMode","graphSeries","chartData","i","obj","JSON","parse","innerArr","series","chartrender","diffrence","first","second","map","color","marginRight","showGraphOrSearchResult","padding","float","startAdornment","option","company","indicator","displayCompany","deleteCompany","displayData","fontSize","marginLeft","openCompanyList","cursor","textTransform","delete","setTimeout","setLoader","setTheState","displayGraph","firstCompanySymbol","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport firebase from '../Firebase';\nimport ReactApexChart from 'react-apexcharts';\nimport swal from 'sweetalert';\nimport '../App.css';\nimport './Company-list.css';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveCircle from '@material-ui/icons/RemoveCircle';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport API from '../service';\nimport history from '../History';\n\n\nconst options = {\n    chart: {\n        stacked: false,\n        zoom: {\n            type: 'x',\n            enabled: true\n        },\n        toolbar: {\n            autoSelected: 'zoom'\n        }\n    },\n    plotOptions: {\n        line: {\n            curve: 'smooth',\n        }\n    },\n    dataLabels: {\n        enabled: false\n    },\n\n    markers: {\n        size: 0,\n        style: 'full',\n    },\n    colors: ['#ff4d4d'],\n    opacity: 0.4,\n    title: {\n        text: 'Stock Price Movement',\n        align: 'left'\n    },\n    fill: {\n        type: 'gradient',\n        gradient: {\n            shadeIntensity: 1,\n            inverseColors: false,\n            opacityFrom: 0.5,\n            opacityTo: 0,\n            stops: [0, 90, 100]\n        },\n    },\n    yaxis: {\n        min: 0,\n        max: 250000,\n        labels: {\n            formatter: function (val) {\n                return (val).toFixed(0);\n            },\n        },\n        title: {\n            text: 'Price'\n        },\n    },\n    xaxis: {\n        type: 'datetime',\n    },\n    tooltip: {\n        shared: false,\n        y: {\n            formatter: function (val) {\n                return (val / 1000).toFixed(0)\n            }\n        }\n    }\n}\n\nconst ranges = [\n    {\n        value: '1min',\n        label: '1 min',\n    },\n    {\n        value: '5min',\n        label: '5 mins',\n    },\n    {\n        value: '15min',\n        label: '15 mins',\n    },\n    {\n        value: '30min',\n        label: '30 mins',\n    },\n    {\n        value: '60min',\n        label: '1 hour',\n    },\n    {\n        value: 'WEEKLY',\n        label: '1 week',\n    },\n    {\n        value: 'MONTHLY',\n        label: '1 month',\n    },\n];\n\nconst indicatorList = [\n    {\n        value: 'SMA',\n        label: 'simple moving average (SMA)',\n    },\n    {\n        value: 'EMA',\n        label: ' Exponential moving average (EMA) '\n    },\n    {\n        value: 'MACD',\n        label: 'Moving average convergence / divergence (MACD)',\n    },\n    {\n        value: 'MACDEXT',\n        label: 'Moving average convergence / divergence'\n    },\n    {\n        value: 'APO',\n        label: 'Absolute price oscillator (APO)',\n    },\n    {\n        value: 'RSI',\n        label: 'Relative strength index (RSI)',\n    },\n    {\n        value: 'ROC',\n        label: ' Rate of change(ROC)'\n    },\n    {\n        value: 'ROCR',\n        label: 'Rate of change ratio (ROCR)'\n    },\n    {\n        value: 'ADX',\n        label: 'Average directional movement index (ADX) ',\n    },\n    {\n        value: 'AROONOSC',\n        label: ' Aroon oscillator (AROONOSC)'\n    },\n    {\n        value: 'TRIX',\n        label: 'Triple smooth exponential moving average (TRIX)',\n    },\n    {\n        value: 'OBV',\n        label: 'On balance volume (OBV) ',\n    }\n];\n\nclass Companylist extends Component {\n\n    constructor(props) {\n        super(props);\n        this.ref = firebase.firestore().collection('company');\n        this.unsubscribe = null;\n        this.state = {\n            user: [],\n            array: [],\n            searchResponse: [],\n            results: [],\n            companyData: [],\n            query: '',\n            value: '',\n            searchValue: '',\n            companySymbol: '',\n            companyName: '',\n            symbol: '',\n            name: '',\n            userEmail: '',\n            grapharray: [],\n            date: \"\",\n            open: '',\n            close: '',\n            high: '',\n            low: '',\n            volume: '',\n            indicatorObj: '',\n            historicalArray: [],\n            intervalArray: [],\n            graphData: [],\n            intervalData: [],\n            firstSelectedCompanyArray: [],\n            secondSelectedCompanyArray: [],\n            indicatorDataArray: [],\n            indicatorGraphData: [],\n            comparisonOfVolume: [],\n            historicalOpen: '',\n            historicalClose: '',\n            historicalHigh: '',\n            historicalLow: '',\n            historicalVolume: '',\n            historicalAdjClose: '',\n            values: '',\n            firstCompany: '',\n            selectedCompany: '',\n            selectedInterval: '',\n            intervalRange: '',\n            clickCompanyName: '',\n            clickCompanySymbol: '',\n            firstSelectedCompany: '',\n            isToggleOn: true,\n            setOpen: false,\n            modalOpen: false,\n            isLoaded: false,\n            isSearchClick: false,\n            isOpenSearch: false,\n            isOpenCompanyList: false,\n            isSelectinterval: false,\n            isGraphDisplay: false,\n            isSelectHistorical: false,\n            isIntervalValue: false,\n            isIndicatorGraph: false,\n            isComparedCompany: false,\n            checkAlreadyAddOrNot: false\n        };\n        this.addCompanytoWatchlist = this.addCompanytoWatchlist.bind(this);\n        this.getSearchValue = this.getSearchValue.bind(this);\n        this.submitSearchValue = this.submitSearchValue.bind(this);\n        this.getCompany = this.getCompany.bind(this);\n        this.displaySelectedCompanyGraph = this.displaySelectedCompanyGraph.bind(this);\n        this.openSearchbar = this.openSearchbar.bind(this);\n        this.displayCompanyList = this.displayCompanyList.bind(this);\n        this.logOut = this.logOut.bind(this);\n    }\n\n    componentDidMount() {\n        this.getCompany();\n        this.getDate();\n        this.unsubscribe = this.ref.onSnapshot(this.getCompany);\n    }\n\n\t/**\n     * @param {object} event get name or symbol of search company\n     */\n    getSearchValue(event) {\n        this.setState({ value: event.target.value, searchValue: event.target.value });\n    }\n\n\t/**\n     * @param {object} event validation of search button \n     */\n    submitSearchValue(event) {\n        this.setState({ value: '', isLoaded: false });\n        /**validation for search input */\n        if (!this.state.value) {\n            swal(\"Please, Enter value\", \"\", \"info\");\n        } else {\n            console.log(\"name:\", this.state.value);\n            console.log(\"searchValue\", this.state.searchValue);\n            event.preventDefault();\n            this.getApiData();\n            this.setState({ value: '' });\n        }\n    }\n\n\t/**\n     * @param {object} data call add company function and get name and symbol of add company \n     */\n    addCompanytoWatchlist(data) {\n        console.log('data: ', data);\n        this.setState({ companySymbol: data['1. symbol'], companyName: data['2. name'] });\n        this.getApiData();\n        this.addComapny();\n    }\n\n\t/**\n\t * @param {string} companySymbol wise display historical data table \n\t */\n    displayHistoricalData(companySymbol) {\n        const historicalData = companySymbol\n        console.log(\"historical data:\", historicalData);\n        console.log(\"symbol of selected company==============>\", companySymbol);\n        console.log(\"type:\", typeof companySymbol)\n        this.setState({ isSelectHistorical: true, isSelectinterval: false, historicalArray: [], isComparedCompany: false })\n        API.displayHistoricalData(historicalData)\n            .then((res) => {\n                try {\n                    const originalObject = res['Time Series (Daily)'];\n                    console.log('originalObject: ', originalObject);\n                    if (originalObject) {\n                        for (let key in originalObject) {\n                            this.state.historicalArray.push({\n                                date: key,\n                                open: originalObject[key]['1. open'],\n                                high: originalObject[key]['2. high'],\n                                low: originalObject[key]['3. low'],\n                                close: originalObject[key]['4. close'],\n                                adjclose: originalObject[key]['5. adjusted close'],\n                                volume: originalObject[key]['6. volume']\n                            })\n                        }\n                        console.log(\"historicalArray==========>\", this.state.historicalArray);\n                        this.setState({ isSelectHistorical: true })\n                    } else {\n                        swal('Internal Server Error');\n                    }\n                } catch (err) {\n                    swal('Internal Server Error');\n                }\n            }).catch((err) => {\n                swal('Internal Server Error')\n            })\n    }\n\n    /** selected symbol to add in watchlist */\n    addComapny() {\n        if (this.state.companySymbol) {\n            console.log(\"addCompany2:\", this.state.companySymbol);\n            return (\n                swal({\n                    title: this.state.companySymbol,\n                    text: this.state.companyName,\n                    icon: \"success\",\n                    dangerMode: true,\n                }).then((willDelete) => {\n                    if (willDelete) {\n                        this.checkIfalreadyAddOrNot(this.state.companyName)\n                    }\n                })\n            )\n        }\n    }\n\n\t/**\n\t * @param {string} companyName already add or not \n\t */\n    checkIfalreadyAddOrNot = (companyName) => {\n        this.state.isSearchClick = false;\n        this.state.isOpenCompanyList = false;\n        console.log('getcompany:');\n        localStorage.getItem('email1')\n        const email = localStorage.email1;\n        console.log(companyName)\n        let companyData = [];\n        /** it's check selected company already added into database or not */\n        firebase.firestore().collection(\"company\").where(\"name\", \"==\", companyName).where(\"email\", \"==\", email)\n            .get()\n            .then(function (querySnapshot) {\n                console.log(\"querySnapshot\", querySnapshot)\n                querySnapshot.forEach(function (doc) {\n                    const { name, email } = doc.data();\n                    console.log(\"data:\", doc.data())\n                    companyData.push({\n                        key: doc.id,\n                        doc,\n                        name,\n                        email,\n                    });\n                });\n                console.log(\"data1:\", companyData.length);\n                if (companyData.length) {\n                    console.log('found data', companyData);\n                    swal(\"Already added!\", \"\", \"info\")\n                        .then((willDelete) => {\n                            if (willDelete) {\n                                window.location.reload();\n                            }\n                        }).catch((err) => {\n                            console.log(\"hey error:\", err);\n                            swal('Internal Server Error');\n                        })\n                } else {\n                    console.log(\"new company\");\n                    addCompanyToDatabase()\n                }\n            }).catch((err) => {\n                swal('Internal Server Error');\n            })\n\n        /** Add comapny to database */\n        const addCompanyToDatabase = () => {\n            localStorage.getItem('email1')\n            let email = localStorage.email1;\n            console.log(\"isLoaded before:\", this.state.isLoaded);\n            this.ref.add({\n                symbol: this.state.companySymbol,\n                name: this.state.companyName,\n                email: email\n            }).then((docRef) => {\n                window.location.reload();\n            }).catch((error) => {\n                swal('Internal Server Error');\n            })\n        }\n    }\n\n    /** api call for selected interval value */\n    selectInterval = prop => event => {\n        this.state.isSelectHistorical = false;\n        let intervalApiData = [];\n        this.state.intervalArray = [];\n        this.state.isComparedCompany = false;\n        const intervalData = {\n            symbol: prop,\n            intervalValue: event.target.value\n        }\n        API.selectInterval(intervalData)\n            .then((res) => {\n                try {\n                    this.setState({ isIntervalValue: true, isSelectinterval: true, isSelectHistorical: false, isComparedCompany: false, selectedInterval: prop, graphData: [], isLoaded: true });\n                    let originalObject;\n                    if (event.target.value === 'MONTHLY') {\n                        originalObject = res['Monthly Time Series'];\n                    } else if (event.target.value === 'WEEKLY') {\n                        originalObject = res['Weekly Time Series'];\n                    } else {\n                        originalObject = res['Time Series (' + event.target.value + ')'];\n                    }\n                    console.log('originalObject: ', originalObject);\n                    console.log(\"interval array======second time===>\", this.state.intervalArray);\n                    if (originalObject) {\n                        for (let key in originalObject) {\n                            intervalApiData.push({\n                                date: key,\n                                open: originalObject[key]['1. open'],\n                                high: originalObject[key]['2. high'],\n                                low: originalObject[key]['3. low'],\n                                close: originalObject[key]['4. close'],\n                                volume: originalObject[key]['5. volume']\n                            })\n                        }\n                        this.setState({ intervalArray: intervalApiData, isIntervalValue: true })\n                        this.displayGraphOfInterval();\n                    }\n                } catch (err) {\n                    console.log(\"err====\", err);\n                    swal('Internal Server Error');\n                }\n            }).catch((err) => {\n                swal('Internal Server Error');\n            })\n    };\n\n    /** display graph of selected interval */\n    displayGraphOfInterval() {\n        const graphSeries = this.state.intervalArray;\n        let chartData = 1484418600000;\n        this.state.intervalData = [];\n        for (let i = 0; i < graphSeries.length; i++) {\n            chartData = chartData + 86400000;\n            let obj = JSON.parse(graphSeries[i].volume)\n            let innerArr = [chartData, obj];\n            this.state.intervalData.push(innerArr);\n        }\n        let series = [{\n            name: 'Stock price',\n            type: 'area',\n            data: this.state.intervalData\n        }\n        ]\n        /**display chart of selected interval */\n        let chartrender =\n            <div id=\"chart\">\n                <ReactApexChart options={options} series={series} type=\"area\" height=\"500\" />\n            </div>\n        return (<div>\n            {chartrender}\n        </div>\n        )\n    }\n\n    /** select company and call api of selected company */\n    selectComparisonCompany = prop => event => {\n        this.state.isComparedCompany = true;\n        this.state.isSelectHistorical = false;\n        this.state.isSelectinterval = false;\n        this.state.isIndicatorGraph = false;\n        this.state.isIntervalValue = false;\n        const companySymbol = event.target.value\n        API.selectComparisonCompany(companySymbol)\n            .then((res, err) => {\n                try {\n                    this.setState({ isComparedCompany: true, firstCompany: prop, isIndicatorGraph: false, selectedCompany: event.target.value })\n                    const originalObject = res['Time Series (5min)'];\n                    console.log(\"res==========>\", originalObject);\n                    if (originalObject) {\n                        for (let key in originalObject) {\n                            this.state.firstSelectedCompanyArray.push({\n                                date: key,\n                                open: originalObject[key]['1. open'],\n                                high: originalObject[key]['2. high'],\n                                low: originalObject[key]['3. low'],\n                                close: originalObject[key]['4. close'],\n                                volume: originalObject[key]['5. volume']\n                            })\n                        }\n                        console.log(\"comparison Array1=======>\", this.state.firstSelectedCompanyArray);\n                        this.comparedCompanyData();\n                    }\n                } catch (err) {\n                    console.log(\"err:\", err)\n                    swal('Internal Server Error');\n                }\n            }).catch((err) => {\n\n            })\n        console.log(\"this.state.isComparedCompany:\", this.state.isComparedCompany);\n    }\n\n    /** get data of first selected company  */\n    comparedCompanyData = () => {\n        let selectedCompany = [];\n        let firstSelectedCompany = this.state.firstCompany;\n        API.selectComparisonCompany(firstSelectedCompany)\n            .then((res) => {\n                try {\n                    console.log(\"res============>\", res);\n                    if (res.Note == 'Thank you for using Alpha Vantage! Our standard APâ€¦would like to target a higher API call frequency.') {\n                        alert('wait 1 minute');\n                    } else {\n                        const originalObjectforDisplay = res['Time Series (5min)'];\n                        console.log(\"originalObject===========>\", originalObjectforDisplay);\n                        if (originalObjectforDisplay) {\n                            for (let key in originalObjectforDisplay) {\n                                selectedCompany.push({\n                                    date: key,\n                                    open: originalObjectforDisplay[key]['1. open'],\n                                    high: originalObjectforDisplay[key]['2. high'],\n                                    low: originalObjectforDisplay[key]['3. low'],\n                                    close: originalObjectforDisplay[key]['4. close'],\n                                    volume: originalObjectforDisplay[key]['5. volume']\n                                })\n                            }\n                            this.setState({ secondSelectedCompanyArray: selectedCompany })\n                            console.log(\"comparison Array2=======>\", this.state.secondSelectedCompanyArray);\n                        } else {\n                            swal('Internal Server Error');\n                        }\n                    }\n                    /**selecte other company then call below function */\n                    if (this.state.secondSelectedCompanyArray.length && this.state.firstSelectedCompanyArray.length) {\n                        this.displayGraphOfComparison();\n                    }\n                } catch (err) {\n                    swal('Internal Server Error');\n                }\n            });\n    }\n\n    /** display table of both company*/\n    displayGraphOfComparison() {\n        if (this.state.firstSelectedCompanyArray.length && this.state.secondSelectedCompanyArray.length) {\n            this.state.comparisonOfVolume = [];\n            console.log(\"length1:::\", this.state.firstSelectedCompanyArray.length);\n            console.log(\"length2:::\", this.state.secondSelectedCompanyArray.length);\n            if (this.state.firstSelectedCompanyArray.length > this.state.secondSelectedCompanyArray.length) {\n                for (let i = 0; i < this.state.secondSelectedCompanyArray.length; i++) {\n                    console.log(\"volume1:\", this.state.firstSelectedCompanyArray[i].volume);\n                    console.log(\"volume2:\", this.state.secondSelectedCompanyArray[i].volume)\n                    this.state.comparisonOfVolume.push({ date: this.state.firstSelectedCompanyArray[i].date, diffrence: this.state.secondSelectedCompanyArray[i].volume - this.state.firstSelectedCompanyArray[i].volume, first: this.state.secondSelectedCompanyArray[i].volume, second: this.state.firstSelectedCompanyArray[i].volume });\n                }\n            } else {\n                for (let i = 0; i < this.state.firstSelectedCompanyArray.length; i++) {\n                    console.log(\"volume1:\", this.state.firstSelectedCompanyArray[i].volume);\n                    console.log(\"volume2:\", this.state.secondSelectedCompanyArray[i].volume)\n                    this.state.comparisonOfVolume.push({ date: this.state.firstSelectedCompanyArray[i].date, diffrence: this.state.secondSelectedCompanyArray[i].volume - this.state.firstSelectedCompanyArray[i].volume, first: this.state.secondSelectedCompanyArray[i].volume, second: this.state.firstSelectedCompanyArray[i].volume });\n                }\n            }\n            return (\n                <div>\n                    <Paper>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Date</TableCell>\n                                    <TableCell>{this.state.firstCompany}</TableCell>\n                                    <TableCell>{this.state.selectedCompany}</TableCell>\n                                    <TableCell>Differnce</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {/**display table of compared company data */}\n                                {this.state.comparisonOfVolume.map(data => (\n                                    <TableRow key={data.diffrence}>\n                                        <TableCell>{data.date}</TableCell>\n                                        <TableCell>{data.first}</TableCell>\n                                        <TableCell>{data.second}</TableCell>\n                                        <TableCell>{data.diffrence}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </Paper>\n                </div>\n            )\n        }\n    }\n\n    /** select indicator and call API of selcted indicator */\n    getSelectedIndicatorData = prop => event => {\n        console.log(\"event:\", event.target.value);\n        console.log(\"prop:\", prop);\n        const indicatorData = {\n            selectedCompanySymbol: prop,\n            indicatorValue: event.target.value\n        }\n        API.getSelectedIndicatorData(indicatorData)\n            .then((res) => {\n                try {\n                    this.setState({ indicatorGraphData: [], indicatorDataArray: [], isIndicatorGraph: true, isIntervalValue: false, isSelectHistorical: false, isComparedCompany: false })\n                    const originalObject = res['Technical Analysis: ' + [event.target.value]];\n                    console.log(\"result:\", ['Technical Analysis: ' + [event.target.value]]);\n                    console.log(\"originalObject:\", originalObject);\n                    console.log(\"isIndicatorGraph:\", this.state.isIndicatorGraph);\n                    if (originalObject) {\n                        for (let key in originalObject) {\n                            this.state.indicatorDataArray.push({\n                                date: key,\n                                indicatorObj: originalObject[key][event.target.value],\n                            })\n                        }\n                    } else {\n                        swal('Internal Server Error')\n                    }\n                    console.log(\"indicatorDataArray:\", this.state.indicatorDataArray);\n                    this.displayGraphOfIndicator()\n                } catch (err) {\n                    swal('Internal Server Error');\n                }\n            }).catch((err) => {\n                console.log('hey error: ', err);\n            })\n    }\n\n    /** display graph of selected indicator */\n    displayGraphOfIndicator() {\n        console.log(\"indicator fun called\");\n        let graphSeries = this.state.indicatorDataArray;\n        console.log(\"length:\", graphSeries.length);\n        let chartData = 1484418600000;\n        for (let i = 0; i < graphSeries.length; i++) {\n            chartData = chartData + 86400000;\n            let obj = JSON.parse(graphSeries[i].indicatorObj)\n            let innerArr = [chartData, obj];\n            this.state.indicatorGraphData.push(innerArr);\n        }\n        console.log(\"graphData:\", this.state.indicatorGraphData);\n        let options = {\n            chart: {\n                stacked: false,\n                zoom: {\n                    type: 'x',\n                    enabled: true\n                },\n                toolbar: {\n                    autoSelected: 'zoom'\n                }\n            },\n            plotOptions: {\n                line: {\n                    curve: 'smooth',\n                }\n            },\n            dataLabels: {\n                enabled: false\n            },\n            markers: {\n                size: 0,\n                style: 'full',\n            },\n            colors: ['#ff4d4d'],\n            opacity: 0.4,\n            title: {\n                text: 'Stock Price Movement',\n                align: 'left'\n            },\n            fill: {\n                type: 'gradient',\n                gradient: {\n                    shadeIntensity: 1,\n                    inverseColors: false,\n                    opacityFrom: 0.5,\n                    opacityTo: 0,\n                    stops: [0, 90, 100]\n                },\n            },\n            yaxis: {\n                min: 0,\n                max: 250,\n                labels: {\n                    formatter: function (val) {\n                        return (val).toFixed(0);\n                    },\n                },\n                title: {\n                    text: 'Price'\n                },\n            },\n            xaxis: {\n                type: 'datetime',\n            },\n            tooltip: {\n                shared: false,\n                y: {\n                    formatter: function (val) {\n                        return (val / 1000).toFixed(0)\n                    }\n                }\n            }\n        }\n        let series = [{\n            name: 'Stock price',\n            data: this.state.indicatorGraphData\n        }]\n        // options.yaxis.min = 0;\n        // options.yaxis.max = 250;\n        console.log(\"options.yaxis.min:\", options.yaxis.min)\n        /**display graph of selected indicator */\n        let chartrender =\n            <div id=\"chart\">\n                <ReactApexChart options={options} series={series} type=\"area\" height=\"500\" />\n            </div>\n        return (<div>\n            {chartrender}\n        </div>\n        )\n    }\n\n    /** display watchlist and graph or search list */\n    displayCompanyList() {\n        const { date } = this.state;\n        /**any company added into current user watchlist */\n        if (this.state.grapharray.length) {\n            let graphSeries = this.state.grapharray;\n            let chartData = 1484418600000;\n            let graphData = [];\n            for (let i = 0; i < graphSeries.length; i++) {\n                chartData = chartData + 86400000;\n                let obj = JSON.parse(graphSeries[i].volume)\n                let innerArr = [chartData, obj];\n                graphData.push(innerArr);\n            }\n            let series = [{\n                name: 'Stock price',\n                data: graphData\n            },\n            ]\n            /**display graph of selected company */\n            var chartrender =\n                <div id=\"chart\">\n                    <ReactApexChart options={options} series={series} type=\"area\" height=\"450\" />\n                    <span style={{ color: 'gray' }}>Open: </span> <span style={{ marginRight: 10 }}>{this.state.open}</span>\n                    <span style={{ color: 'gray' }}>Close: </span> <span style={{ marginRight: 10 }}>{this.state.close}</span>\n                    <span style={{ color: 'gray' }}>High: </span> <span style={{ marginRight: 10 }}>{this.state.high}</span>\n                    <span style={{ color: 'gray' }}>Low: </span> <span style={{ marginRight: 10 }}>{this.state.low}</span>\n                    <span style={{ color: 'gray' }}>Volume: </span> <span style={{ marginRight: 10 }}>{this.state.volume}</span>\n                </div>\n        }\n        /**it's display graph or serch response table */\n        let showGraphOrSearchResult = this.state.searchResponse.length ? <div>\n            <center><h3>Search Response....</h3></center>\n            {this.state.searchResponse.map(data =>\n                <List key={data['1. symbol']} className=\"list\">\n                    <ListItem>\n                        <ListItemText className=\"search_list\" primary={data['1. symbol']} secondary={data['2. name']} />\n                        <ListItemSecondaryAction className=\"search_list1\">\n                            <IconButton color=\"primary\" edge=\"end\" aria-label=\"Delete\" onClick={() => this.addCompanytoWatchlist(data)} className=\"addIcon\">\n                                <AddIcon />\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                </List>\n            )}\n        </div> : (this.state.searchResponse ? <div>\n            <span className=\"company_symbol\">{this.state.clickCompanySymbol}</span><span style={{ color: 'gray' }}>{this.state.clickCompanyName}</span>\n            {this.state.isGraphDisplay ? (<span>\n                <span className=\"historical_data\" style={{ padding: 10 }} onClick={() => this.displayHistoricalData(this.state.clickCompanySymbol)}>Historical Data</span>\n                <TextField\n                    select\n                    style={{ float: 'right', padding: 10 }}\n                    value={this.state.values.intervalRange}\n                    onChange={this.selectInterval(this.state.clickCompanySymbol)}\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">Interval</InputAdornment>,\n                    }}>\n                    {ranges.map(option => (\n                        <MenuItem key={option.value} value={option.value}>\n                            {option.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                    select\n                    style={{ float: 'right', padding: 10 }}\n                    value={this.state.values.intervalRange}\n                    onChange={this.selectComparisonCompany(this.state.clickCompanySymbol)}\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">Comparison</InputAdornment>,\n                    }}>\n                    {this.state.companyData.map(company => (\n                        <MenuItem key={company.symbol} value={company.symbol}>\n                            {company.symbol}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                    select\n                    style={{ float: 'right', padding: 10 }}\n                    value={this.state.values.intervalRange}\n                    onChange={this.getSelectedIndicatorData(this.state.clickCompanySymbol)}\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">Indicator</InputAdornment>,\n                    }}>\n                    {indicatorList.map(indicator => (\n                        <MenuItem key={indicator.value} value={indicator.value} >\n                            {indicator.label}\n                        </MenuItem>\n                    ))}\n                </TextField>\n\n            </span>) : ('')}\n            {/**when select historical data at that time display table */}\n            {this.state.isSelectHistorical ? (<div>\n                <Paper>\n                    <Table size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Date</TableCell>\n                                <TableCell align=\"right\">Open</TableCell>\n                                <TableCell align=\"right\">High</TableCell>\n                                <TableCell align=\"right\">Low</TableCell>\n                                <TableCell align=\"right\">Close</TableCell>\n                                <TableCell align=\"right\">Adj Close</TableCell>\n                                <TableCell align=\"right\">Volume</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.historicalArray.map(historicalData => (\n                                <TableRow key={historicalData.date}>\n                                    <TableCell component=\"th\" scope=\"row\">{historicalData.date}</TableCell>\n                                    <TableCell align=\"right\">{historicalData.open}</TableCell>\n                                    <TableCell align=\"right\">{historicalData.high}</TableCell>\n                                    <TableCell align=\"right\">{historicalData.low}</TableCell>\n                                    <TableCell align=\"right\">{historicalData.close}</TableCell>\n                                    <TableCell align=\"right\">{historicalData.adjclose}</TableCell>\n                                    <TableCell align=\"right\">{historicalData.volume}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            </div>) : (<div>{chartrender ? <div>{this.state.isIntervalValue ? <div>{this.displayGraphOfInterval()}</div> : <div>{this.state.isIndicatorGraph ? <div>{this.displayGraphOfIndicator()}</div> : <div>{this.state.isComparedCompany ? <div>{this.displayGraphOfComparison()}</div> : <div>{chartrender}</div>}</div>}</div>}</div>\n                : <div></div>}</div>)}</div>\n            : 'No data found')\n        /**display watchlist company list */\n        let displayCompany = this.state.companyData.length ? <div>{this.state.companyData.map(company =>\n            <List key={company.key} className=\"cursorClass\">\n                <ListItem onClick={() => this.displaySelectedCompanyGraph(company)}>\n                    <ListItemText primary={company.symbol} secondary={company.name} />\n                    <ListItemSecondaryAction>\n                        <IconButton edge=\"end\" aria-label=\"Delete\" style={{ color: '#ff4d4d' }} onClick={this.deleteCompany.bind(this, company.key)}>\n                            <RemoveCircle />\n                        </IconButton>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </List>\n        )} </div> : <div> <center><p>Add Comapany to watchlist</p></center></div>\n        /**dispaly graph or search list and no company added or search then dispaly 'no data found' */\n        let displayData = this.state.companyData.length ? <div>{showGraphOrSearchResult}</div> : <div><center><h2>No Company Found</h2></center></div>\n\n        /**when searchbar is open but not enter a value */\n        if (this.state.isOpenSearch && !this.state.isSearchClick) {\n            return (\n                <div>\n                    <div className=\"grid_class\">\n                        <span style={{ fontSize: 25, marginLeft: 8, color: '#fff' }}><b>Stock</b></span><br />\n                        <span style={{ fontSize: 17, color: 'gray', marginLeft: 8 }}>{date}</span>\n                        <div className=\"logout\">\n                            <Link to=\"/login\"><Button variant=\"contained\" onClick={() => this.logOut()}>\n                                <b>Logout</b>\n                            </Button></Link>\n                        </div>\n                    </div>\n                    {this.addComapny()}\n                    <div className=\"grid_class1\">\n                        <div className=\"company_list\">\n                            <Grid container spacing={1}>\n                                <Grid item sm={10}>\n                                    <p style={{ marginLeft: 18 }}>Manage WatchList</p>\n                                </Grid>\n                                <Grid item sm={2}>\n                                    <p onClick={() => this.openCompanyList()} style={{ color: '#3f51b5', cursor: 'pointer' }}>Done</p>\n                                </Grid>\n                            </Grid>\n                            {this.state.companyData.map(company =>\n                                <List key={company.key} className=\"vl\" >\n                                    <ListItem >\n                                        <ListItemText primary={company.symbol} secondary={company.name} />\n                                        <ListItemSecondaryAction>\n                                            <IconButton edge=\"end\" aria-label=\"Delete\" style={{ color: '#ff4d4d' }} onClick={this.deleteCompany.bind(this, company.key)}>\n                                                <RemoveCircle />\n                                            </IconButton>\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                </List>\n                            )}\n                        </div>\n                        <div className=\"search_bar\">\n                            <Typography variant=\"h6\" noWrap>\n                                <TextField\n                                    id=\"outlined-with-placeholder\"\n                                    label=\"Search\"\n                                    className=\"search_input\"\n                                    value={this.state.value}\n                                    onChange={this.getSearchValue}\n                                    margin=\"normal\"\n                                    variant=\"outlined\"\n                                />\n                                <Button id=\"search\" onClick={this.submitSearchValue} style={{ color: '#fff' }} disabled={!this.state.value} autoFocus>\n                                    Search\n\t\t\t\t\t\t\t\t</Button>\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n            )\n            /**searchbar is open then it's return */\n        } else if (this.state.isSearchClick) {\n            if (!this.state.searchResponse.length) {\n                console.log(\"========else if ========if======\");\n                return (\n                    <div>\n                        <div className=\"grid_class\">\n                            <span style={{ fontSize: 25, marginLeft: 8, color: '#fff' }}><b>Stock</b></span><br />\n                            <span style={{ fontSize: 17, color: 'gray', marginLeft: 8 }}>{date}</span>\n                            <div className=\"logout\">\n                                <Link to=\"/login\"><Button variant=\"contained\" onClick={() => this.logOut()}>\n                                    <b>Logout</b>\n                                </Button></Link>\n                            </div>\n                        </div>\n\n                        {this.addComapny()}\n                        <div className=\"grid_class1\">\n                            <div className=\"company_list\">\n                                <Grid container spacing={12}>\n                                    <Grid item sm={10}>\n                                        <p style={{ marginLeft: 18 }}>Manage Watchlist</p>\n                                    </Grid>\n                                    <Grid item sm={2}>\n                                        <p onClick={() => this.openCompanyList()} style={{ color: '#3f51b5' }}>Done</p>\n                                    </Grid>\n                                </Grid>\n                                {this.state.companyData.map(company =>\n                                    <List key={company.key} className=\"cursorClass vl\">\n                                        <ListItem onClick={() => this.displaySelectedCompanyGraph(company)}>\n                                            <ListItemText primary={company.symbol} secondary={company.name} />\n                                            <ListItemSecondaryAction>\n                                                <IconButton edge=\"end\" aria-label=\"Delete\" style={{ color: '#ff4d4d' }} onClick={this.deleteCompany.bind(this, company.key)}>\n                                                    <RemoveCircle />\n                                                </IconButton>\n                                            </ListItemSecondaryAction>\n                                        </ListItem>\n                                    </List>\n                                )}\n                            </div>\n                            <div className=\"searching_list\">\n                                <center><div className=\"searchCompany_list\">\n                                    <p style={{ marginRight: 296 }}>Showing Results for: <span style={{ textTransform: 'capitalize' }}><b>{this.state.searchValue}</b></span></p>\n                                    No Data Found\n\t\t\t\t\t          </div>\n                                </center>\n                            </div>\n                        </div>\n                    </div>\n                )\n            } else {\n                console.log(\"else if =========else\");\n                return (\n                    <div>\n                        <div className=\"grid_class\">\n                            <span style={{ fontSize: 25, marginLeft: 8, color: '#fff' }}><b>Stock</b></span><br />\n                            <span style={{ fontSize: 17, color: 'gray', marginLeft: 8 }}>{date}</span>\n                            <div className=\"logout\">\n                                <Link to=\"/login\"><Button variant=\"contained\" onClick={() => this.logOut()}>\n                                    <b>Logout</b>\n                                </Button></Link>\n                            </div>\n                        </div>\n                        {this.addComapny()}\n                        <div className=\"grid_class1\">\n                            <div className=\"company_list\">\n\n                                <Grid container spacing={1}>\n                                    <Grid item sm={10}>\n                                        <p style={{ marginLeft: 18 }}>Manage Watchlist</p>\n                                    </Grid>\n                                    <Grid item sm={2}>\n                                        <p onClick={() => this.openCompanyList()} style={{ color: '#3f51b5', cursor: 'pointer' }}>Done</p>\n                                    </Grid>\n                                </Grid>\n                                {this.state.companyData.map(company =>\n                                    <List key={company.key} >\n                                        <ListItem className=\"vl\">\n                                            <ListItemText primary={company.symbol} secondary={company.name} />\n                                            <ListItemSecondaryAction>\n                                                <IconButton edge=\"end\" aria-label=\"Delete\" style={{ color: '#ff4d4d' }} onClick={this.deleteCompany.bind(this, company.key)}>\n                                                    <RemoveCircle />\n                                                </IconButton>\n                                            </ListItemSecondaryAction>\n                                        </ListItem>\n                                    </List>\n                                )}\n                            </div>\n                            <div className=\"search_bar\">\n                                <Typography variant=\"h6\" noWrap>\n                                    <TextField\n                                        id=\"outlined-with-placeholder\"\n                                        label=\"Search\"\n                                        className=\"search_input\"\n                                        value={this.state.value}\n                                        onChange={this.getSearchValue}\n                                        margin=\"normal\"\n                                        variant=\"outlined\"\n                                    />\n                                    <Button className=\"search_button\" id=\"search\" disabled={!this.state.value} onClick={this.submitSearchValue} style={{ color: '#fff' }} autoFocus>\n                                        Search\n\t\t\t\t\t\t\t\t\t</Button>\n                                </Typography>\n\n                                <center><div className=\"searchCompany_list\">\n                                    <p style={{ marginRight: 296 }}>Showing Results for: <span style={{ textTransform: 'capitalize' }}><b>{this.state.searchValue}</b></span></p>\n\n                                    {this.state.searchResponse.map(data =>\n                                        <List key={data['1. symbol']} >\n                                            <ListItem>\n                                                <ListItemText primary={data['1. symbol']} secondary={data['2. name']} />\n                                                <ListItemSecondaryAction >\n                                                    <IconButton color=\"primary\" edge=\"end\" aria-label=\"Delete\" onClick={() => this.addCompanytoWatchlist(data)} >\n                                                        <AddIcon />\n                                                    </IconButton>\n                                                </ListItemSecondaryAction>\n                                            </ListItem>\n                                        </List>\n                                    )}\n                                </div>\t</center>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n        } else {\n            if (!this.state.isOpenCompanyList) {\n                console.log(\"=====else ==========if\");\n                return (\n                    <div>\n                        <div className=\"grid_class\">\n                            <span style={{ fontSize: 28, marginLeft: 8, color: '#fff' }}><b>Stock</b></span><br />\n                            <span style={{ fontSize: 17, color: 'gray', marginLeft: 8 }}>{date}</span>\n                            <div className=\"logout\">\n                                <Link to=\"/login\"><Button variant=\"contained\" onClick={() => this.logOut()}>\n                                    <b>Logout</b>\n                                </Button></Link>\n                            </div>\n                        </div>\n                        <div className=\"grid_class1\">\n                            <div className=\"company_list\">\n                                <div className=\"plus_class\">\n                                    <Grid container spacing={1}>\n                                        <Grid item sm={4}>\n                                            <IconButton color=\"primary\" edge=\"end\" aria-label=\"Delete\" className=\"addIcon\" onClick={() => this.openSearchbar()}>\n                                                <AddIcon />\n                                            </IconButton>\n                                        </Grid>\n                                        <Grid item sm={8}>\n                                            <p><b>Manage WatchList</b></p>\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                                {displayCompany}\n                            </div>\n                            <div className=\"graph_list\">\n                                {displayData}\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n\n        }\n    }\n\n    /** get data of searching company */\n    getApiData() {\n        console.log(\"value:\", this.state.value);\n        const companySymbol = this.state.value;\n        API.getApiData(companySymbol)\n            .then((res) => {\n                try {\n                    console.log(\"resssssssss:\", res);\n                    console.log(\"data of response:\", res['bestMatches']);\n                    this.setState({\n                        searchResponse: res['bestMatches'],\n                        isSearchClick: true,\n                        isLoaded: true\n                    });\n                    if (!this.state.searchResponse.length) {\n                        console.log(\"searchrespone:\", this.state.searchResponse.length);\n                        console.log(\"===if callling===\");\n                        return (\n                            <div>\n                                \"No Data Found\"\n\t\t\t\t\t\t\t</div>\n                        )\n                    }\n                } catch (err) {\n                    swal('Internal Server Error');\n                }\n            }).catch((err) => {\n                swal('Internal Server Error');\n            })\n    }\n\n    /** get current date */\n    getDate = () => {\n        let date = new Date().toDateString();\n        this.setState({ date });\n    };\n\n\t/**\n\t * @param {string} id wise delete company from watchlist \n\t */\n    deleteCompany(id) {\n        firebase.firestore().collection('company').doc(id).delete().then(() => {\n            console.log(\"cdata:\", this.state.companyData);\n            swal(\"Successfully deleted!\", \"\", \"success\");\n            console.log(\"Document successfully deleted!\");\n            if (this.state.companyData.length === 1) {\n                window.location.reload();\n            }\n        }).catch((error) => {\n            swal('Internal Server Error');\n        });\n    }\n\n\t/**\n\t * @param {object} data wise display graph \n\t */\n    displaySelectedCompanyGraph(data) {\n        this.state.isSelectHistorical = false;\n        this.state.isIndicatorGraph = false;\n        this.state.isComparedCompany = false;\n        this.state.isSelectinterval = false;\n        this.state.isIntervalValue = false;\n        this.setState({\n            isLoaded: false, isSelectinterval: false, isSelectHistorical: false, isComparedCompany: false, isIndicatorGraph: false\n        })\n        console.log('data: ', data);\n        let grapharray = [];\n        const companySymbol = data.symbol;\n        API.displaySelectedCompanyGraph(companySymbol)\n            .then((res) => {\n                try {\n                    if (!res) {\n                        swal(\"Click after a minute\");\n                    } else {\n                        const originalObject = res['Time Series (5min)'];\n                        if (originalObject) {\n                            for (let key in originalObject) {\n                                grapharray.push({\n                                    date: key,\n                                    open: originalObject[key]['1. open'],\n                                    high: originalObject[key]['2. high'],\n                                    low: originalObject[key]['3. low'],\n                                    close: originalObject[key]['4. close'],\n                                    volume: originalObject[key]['5. volume']\n                                })\n                            }\n                        } else {\n                            swal('Internal Server Error');\n                        }\n                        if (!grapharray.length) {\n                            setTimeout(this.setState({ isLoaded: true }), 3000);\n                            swal('click after a minue')\n                        } else {\n                            console.log(\"open:\", grapharray['0'].open);\n                            console.log(\"isGraphDisplay before======>\", this.state.isGraphDisplay);\n                            this.setState({\n                                grapharray: grapharray,\n                                open: grapharray['0'].open,\n                                close: grapharray['0'].close,\n                                high: grapharray['0'].high,\n                                low: grapharray['0'].low,\n                                volume: grapharray['0'].volume,\n                                clickCompanyName: data.name,\n                                clickCompanySymbol: data.symbol,\n                                isLoaded: true,\n                                isGraphDisplay: true\n                            })\n                            console.log(\"isGraphDisplay after======>\", this.state.isGraphDisplay);\n                        }\n                    }\n                } catch (err) {\n                    swal('Internal Server Error');\n                }\n            }).catch((err) => {\n                swal('Internal Serverhnjhnu')\n            })\n    }\n\n    /** logout and clear localstorage */\n    logOut = () => {\n        firebase\n            .auth()\n            .signOut().then(function () {\n                console.log('Signed Out');\n                localStorage.clear();\n                localStorage.removeItem('email1');\n                console.log(localStorage);\n                history.push('/')\n            }, function (error) {\n                swal('Internal Server Error');\n            });\n    }\n\n    /** open searchbar onclick of plus sign */\n    openSearchbar() {\n        this.setState({\n            isOpenSearch: true\n        });\n    }\n\n    /** display watchlist onclick of done */\n    openCompanyList() {\n        this.setState({ isOpenCompanyList: false })\n        console.log(\"isOpenCompanyList:\", this.state.isOpenCompanyList);\n        history.push('/Watch-list')\n    }\n\n    /** get current user added company from database */\n    getCompany() {\n        let companyData = [];\n        localStorage.getItem('email1')\n        let email = localStorage.email1;\n        console.log('email==========>', email);\n        firebase.firestore().collection(\"company\").where(\"email\", \"==\", email)\n            .get()\n            .then(function (querySnapshot) {\n                querySnapshot.forEach(function (doc) {\n                    const { name, symbol } = doc.data();\n                    companyData.push({\n                        key: doc.id,\n                        doc,\n                        name,\n                        symbol,\n                    });\n                });\n                setLoader(true);\n                if (companyData.length) {\n                    console.log('found data==========>', companyData);\n                    setTheState(companyData);\n                    console.log(\"call\");\n                    // displayGraph()\n                } else {\n                    return (\n                        <div>\n                            <p>No data found</p>\n                        </div>\n                    )\n                }\n            }).catch(function (error) {\n                console.log(\"Error getting documents: \", error);\n            });\n\n        let setLoader = (isLoaded) => {\n            this.setState({\n                isLoaded: isLoaded\n            })\n        }\n\n        let setTheState = (companyData) => {\n            this.setState({\n                companyData: companyData,\n                isLoaded: true\n            })\n        }\n        let displayGraph = () => {\n            console.log(\"companyData before:\", this.state.companyData);\n            console.log(\"companyData:\", this.state.companyData);\n            let firstCompanySymbol = this.state.companyData[0];\n            console.log(\"firstCompanySymbol\", firstCompanySymbol);\n            this.displaySelectedCompanyGraph(firstCompanySymbol)\n        }\n    }\n\n    render() {\n        const { isLoaded } = this.state;\n        if (!isLoaded) {\n            return (\n                <center>\n                    <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n                </center>\n            )\n        } else if (isLoaded) {\n            return (\n                <div className=\"main\">\n                    {this.displayCompanyList()}\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <h2>Sorry no data found</h2>\n                </div>\n            );\n        }\n    }\n}\n\n\nexport default Companylist\n\n"]},"metadata":{},"sourceType":"module"}